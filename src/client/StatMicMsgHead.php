<?php

declare(strict_types=1);

/**
 * NOTE: This class is auto generated by Tars Generator (https://github.com/wenbinye/tars-generator).
 *
 * Do not edit the class manually.
 * Tars Generator version: 1.0
 */

namespace wenbinye\tars\client;

use wenbinye\tars\protocol\annotation\TarsProperty;

final class StatMicMsgHead
{
    /**
     * @TarsProperty(order = 0, required = true, type = "string")
     *
     * @var string|null
     */
    public $masterName;

    /**
     * @TarsProperty(order = 1, required = true, type = "string")
     *
     * @var string|null
     */
    public $slaveName;

    /**
     * @TarsProperty(order = 2, required = true, type = "string")
     *
     * @var string|null
     */
    public $interfaceName;

    /**
     * @TarsProperty(order = 3, required = true, type = "string")
     *
     * @var string|null
     */
    public $masterIp;

    /**
     * @TarsProperty(order = 4, required = true, type = "string")
     *
     * @var string|null
     */
    public $slaveIp;

    /**
     * @TarsProperty(order = 5, required = true, type = "int")
     *
     * @var int|null
     */
    public $slavePort;

    /**
     * @TarsProperty(order = 6, required = true, type = "int")
     *
     * @var int|null
     */
    public $returnValue;

    /**
     * @TarsProperty(order = 7, required = false, type = "string")
     *
     * @var string|null
     */
    public $slaveSetName;

    /**
     * @TarsProperty(order = 8, required = false, type = "string")
     *
     * @var string|null
     */
    public $slaveSetArea;

    /**
     * @TarsProperty(order = 9, required = false, type = "string")
     *
     * @var string|null
     */
    public $slaveSetID;

    /**
     * @TarsProperty(order = 10, required = false, type = "string")
     *
     * @var string|null
     */
    public $tarsVersion;
}
