<?php

declare(strict_types=1);

/**
 * NOTE: This class is auto generated by Tars Generator (https://github.com/wenbinye/tars-generator).
 *
 * Do not edit the class manually.
 * Tars Generator version: 1.0
 */

namespace wenbinye\tars\client;

use wenbinye\tars\protocol\annotation\TarsClient;
use wenbinye\tars\protocol\annotation\TarsParameter;
use wenbinye\tars\protocol\annotation\TarsReturnType;

/**
 * @TarsClient(name="tars.tarsconfig.ConfigObj")
 */
interface ConfigServant
{
    /**
     * 读取配置文件列表.
     *
     * @tars-param app, app name
     * @tars-param server, server name
     * @tars-param vf, config file name
     *
     * @TarsParameter(name = "app", type = "string")
     * @TarsParameter(name = "server", type = "string")
     * @TarsParameter(name = "vf", type = "vector<string>", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string   $app
     * @param string   $server
     * @param string[] $vf
     *
     * @return int
     */
    public function ListConfig(string $app, string $server, ?array &$vf): int;

    /**
     * 读取配置文件.
     *
     * @tars-param app, app name
     * @tars-param server, server name
     * @tars-param filename, config file name
     * @tars-param config, 配置文件内容
     *
     * @TarsParameter(name = "app", type = "string")
     * @TarsParameter(name = "server", type = "string")
     * @TarsParameter(name = "filename", type = "string")
     * @TarsParameter(name = "config", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $app
     * @param string $server
     * @param string $filename
     * @param string $config
     *
     * @return int
     */
    public function loadConfig(string $app, string $server, string $filename, ?string &$config): int;

    /**
     * 根据host读取文件.
     *
     * @tars-param appSerever, app.server
     * @tars-param filename, config file name
     * @tars-param host, ip
     * @tars-param config, 配置文件内容
     *
     * @TarsParameter(name = "appServerName", type = "string")
     * @TarsParameter(name = "filename", type = "string")
     * @TarsParameter(name = "host", type = "string")
     * @TarsParameter(name = "config", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $appServerName
     * @param string $filename
     * @param string $host
     * @param string $config
     *
     * @return int
     */
    public function loadConfigByHost(string $appServerName, string $filename, string $host, ?string &$config): int;

    /**
     * 检查配置文件是否服务TC_Config格式.
     *
     * @tars-param appSerever, app.server
     * @tars-param filename, config file name
     * @tars-param host, ip
     * @tars-param result, 提示
     * @tars-return int 0: 合法, -1:非法
     *
     * @TarsParameter(name = "appServerName", type = "string")
     * @TarsParameter(name = "filename", type = "string")
     * @TarsParameter(name = "host", type = "string")
     * @TarsParameter(name = "result", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $appServerName
     * @param string $filename
     * @param string $host
     * @param string $result
     *
     * @return int
     */
    public function checkConfig(string $appServerName, string $filename, string $host, ?string &$result): int;

    /**
     * 读取服务所在节点的配置文件列表.
     *
     * @tars-param configInfo, ConfigInfo 配置文件信息，如果没有set分组信息，请设置setdivision为空""
     * @tars-param vf, config file name
     * @tars-return int 0: 成功, -1:失败
     *
     * @TarsParameter(name = "configInfo", type = "ConfigInfo")
     * @TarsParameter(name = "vf", type = "vector<string>", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param ConfigInfo $configInfo
     * @param string[]   $vf
     *
     * @return int
     */
    public function ListConfigByInfo(ConfigInfo $configInfo, ?array &$vf): int;

    /**
     * 读取配置文件.
     *
     * @tars-param configInfo, ConfigInfo 配置文件信息
     * @tars-param config, 配置文件内容
     * @tars-return int 0: 成功, -1:失败
     *
     * @TarsParameter(name = "configInfo", type = "ConfigInfo")
     * @TarsParameter(name = "config", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param ConfigInfo $configInfo
     * @param string     $config
     *
     * @return int
     */
    public function loadConfigByInfo(ConfigInfo $configInfo, ?string &$config): int;

    /**
     * 检查配置文件是否符合TC_Config格式.
     *
     * @tars-param configInfo, ConfigInfo 配置文件信息
     * @tars-param result, 提示
     * @tars-return int 0: 合法, -1:非法
     *
     * @TarsParameter(name = "configInfo", type = "ConfigInfo")
     * @TarsParameter(name = "result", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param ConfigInfo $configInfo
     * @param string     $result
     *
     * @return int
     */
    public function checkConfigByInfo(ConfigInfo $configInfo, ?string &$result): int;

    /**
     * 获取服务的所有配置文件列表，.
     *
     * @tars-param configInfo 支持拉取应用配置列表，服务配置列表，机器配置列表
     * @tars-param [out] vf  获取到的文件名称列表
     * @tars-return int 0: 成功, -1:失败
     *
     * @TarsParameter(name = "configInfo", type = "GetConfigListInfo")
     * @TarsParameter(name = "vf", type = "vector<string>", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param GetConfigListInfo $configInfo
     * @param string[]          $vf
     *
     * @return int
     */
    public function ListAllConfigByInfo(GetConfigListInfo $configInfo, ?array &$vf): int;
}
